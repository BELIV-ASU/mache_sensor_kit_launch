<launch>
  <arg name="launch_driver" default="true"/>
  <arg name="playback" default="false"/>
  <arg name="use_concat_filter" default="true"/>
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)"/>
  <arg name="vehicle_mirror_param_file" description="mirror_param_file" />
  <arg name="use_pointcloud_container" default="false" description="launch pointcloud container"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>

  <group>
    <push-ros-namespace namespace="lidar"/>
	<!-- Front-left Ouster LIDAR -->
	<include file="$(find-pkg-share asu)/launch/ouster_driver.launch.py">
	<arg name="playback" value="$(var playback)" />
	<arg name="frame_id" value="top" />
	<arg name="lidar_hostname" value="192.168.0.4" />
	<arg name="lidar_port" value="7502" />
	<arg name="imu_port" value="7503" />
	</include>
	
	<!--Rear-right Ouster LIDAR -->
	<include file="$(find-pkg-share asu)/launch/ouster_driver.launch.py">
	<arg name="playback" value="$(var playback)" />
	<arg name="frame_id" value="rear" />
	<arg name="lidar_hostname" value="192.168.0.5" />
	<arg name="lidar_port" value="7504" />
	<arg name="imu_port" value="7505" />
	</include>
	
	<group>
	<push-ros-namespace namespace="top"/>
	<include file="$(find-pkg-share mache_sensor_kit_launch)/launch/velodyne_node_container.launch.py">
    	<arg name="launch_driver" value="$(var launch_driver)"/>
    	<arg name="frame_id" value="top"/>
    	<arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
    	<arg name="use_intra_process" value="true"/>
    	<arg name="use_multithread" value="true"/>
  	</include>
  	</group>
  	
  	<group>
	<push-ros-namespace namespace="rear"/>
	<include file="$(find-pkg-share mache_sensor_kit_launch)/launch/velodyne_node_container.launch.py">
    	<arg name="launch_driver" value="$(var launch_driver)"/>
    	<arg name="frame_id" value="rear"/>
    	<arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
    	<arg name="use_intra_process" value="true"/>
    	<arg name="use_multithread" value="true"/>
  	</include>
  	</group>
	
	<include file="$(find-pkg-share mache_sensor_kit_launch)/launch/pointcloud_preprocessor.launch.py">
	<arg name="base_frame" value="base_link"/>
	<arg name="use_intra_process" value="true"/>
	<arg name="use_multithread" value="true"/>
	<arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
	<arg name="container_name" value="$(var pointcloud_container_name)"/>
	</include>
  </group>
  
  <node pkg="topic_tools" exec="relay" name="top_lidar_pointcloud_relay1" output="log">
  <param name="input_topic" value="/sensing/lidar/top/points"/>
  <param name="output_topic" value="/sensing/lidar/top/pointcloud_raw_ex"/>
  <param name="type" value="sensor_msgs/msg/PointCloud2"/>
  <param name="reliability" value="best_effort"/>
  </node>
  
  <node pkg="topic_tools" exec="relay" name="top_lidar_pointcloud_relay2" output="log">
  <param name="input_topic" value="/sensing/lidar/top/points"/>
  <param name="output_topic" value="/sensing/lidar/top/pointcloud_raw"/>
  <param name="type" value="sensor_msgs/msg/PointCloud2"/>
  <param name="reliability" value="best_effort"/>
  </node>
  
  <node pkg="topic_tools" exec="relay" name="rear_lidar_pointcloud_relay" output="log">
  <param name="input_topic" value="/sensing/lidar/rear/points"/>
  <param name="output_topic" value="/sensing/lidar/rear/pointcloud_raw_ex"/>
  <param name="type" value="sensor_msgs/msg/PointCloud2"/>
  <param name="reliability" value="best_effort"/>
  </node>
  
</launch>
